# Generated by Django 4.2.7 on 2025-08-06 16:42

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("transactions", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EscalationRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "alert_severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timeout_minutes", models.IntegerField()),
                ("business_hours_only", models.BooleanField(default=False)),
                ("escalation_levels", models.JSONField(default=list)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="escalation_rules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["timeout_minutes"],
            },
        ),
        migrations.CreateModel(
            name="AlertRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("conditions", models.JSONField(default=dict)),
                ("fraud_score_threshold", models.FloatField(blank=True, null=True)),
                (
                    "amount_threshold",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                ("alert_type", models.CharField(max_length=100)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("alert", "Generate Alert"),
                            ("escalate", "Immediate Escalation"),
                            ("block", "Block and Alert"),
                        ],
                        max_length=20,
                    ),
                ),
                ("notification_channels", models.JSONField(default=list)),
                (
                    "consolidation_window",
                    models.DurationField(default=datetime.timedelta(seconds=600)),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("priority", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alert_rules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["priority", "name"],
            },
        ),
        migrations.CreateModel(
            name="Alert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("alert_type", models.CharField(max_length=100)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("acknowledged", "Acknowledged"),
                            ("resolved", "Resolved"),
                            ("escalated", "Escalated"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("fraud_score", models.FloatField()),
                ("risk_factors", models.JSONField(default=dict)),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField()),
                ("context_data", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "rule_triggered",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="alerts.alertrule",
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="transactions.transaction",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "channel_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("slack", "Slack"),
                            ("webhook", "Webhook"),
                            ("teams", "Microsoft Teams"),
                        ],
                        max_length=20,
                    ),
                ),
                ("alert_type", models.CharField(max_length=100)),
                ("subject_template", models.CharField(blank=True, max_length=255)),
                ("body_template", models.TextField()),
                ("variables", models.JSONField(default=dict)),
                ("formatting_options", models.JSONField(default=dict)),
                ("is_default", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["channel_type", "alert_type", "name"],
                "indexes": [
                    models.Index(
                        fields=["channel_type", "alert_type"],
                        name="alerts_noti_channel_dfce96_idx",
                    ),
                    models.Index(
                        fields=["is_default"], name="alerts_noti_is_defa_00553f_idx"
                    ),
                    models.Index(
                        fields=["owner"], name="alerts_noti_owner_i_44b0f8_idx"
                    ),
                ],
                "unique_together": {
                    ("channel_type", "alert_type", "is_default", "owner")
                },
            },
        ),
        migrations.CreateModel(
            name="NotificationDelivery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "channel_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("slack", "Slack"),
                            ("webhook", "Webhook"),
                            ("teams", "Microsoft Teams"),
                        ],
                        max_length=50,
                    ),
                ),
                ("recipient", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("failed", "Failed"),
                            ("retrying", "Retrying"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("external_id", models.CharField(blank=True, max_length=255)),
                ("attempts", models.IntegerField(default=0)),
                ("last_attempt_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("retry_after", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "alert",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="alerts.alert",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["alert", "channel_type"],
                        name="alerts_noti_alert_i_c9968a_idx",
                    ),
                    models.Index(
                        fields=["status"], name="alerts_noti_status_12b413_idx"
                    ),
                    models.Index(
                        fields=["retry_after"], name="alerts_noti_retry_a_6be71f_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="EscalationTask",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("escalation_level", models.IntegerField()),
                ("scheduled_at", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("executed", "Executed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("executed_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "alert",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="escalation_tasks",
                        to="alerts.alert",
                    ),
                ),
                (
                    "escalation_rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="alerts.escalationrule",
                    ),
                ),
            ],
            options={
                "ordering": ["scheduled_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "scheduled_at"],
                        name="alerts_esca_status_01fabf_idx",
                    ),
                    models.Index(
                        fields=["alert"], name="alerts_esca_alert_i_36a5cf_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="escalationrule",
            index=models.Index(
                fields=["is_active", "alert_severity"],
                name="alerts_esca_is_acti_f7955d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="escalationrule",
            index=models.Index(fields=["owner"], name="alerts_esca_owner_i_1cd5a6_idx"),
        ),
        migrations.AddIndex(
            model_name="alertrule",
            index=models.Index(
                fields=["is_active", "priority"], name="alerts_aler_is_acti_fdc6fd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alertrule",
            index=models.Index(fields=["owner"], name="alerts_aler_owner_i_09f291_idx"),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["status", "severity"], name="alerts_aler_status_58cd09_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["created_at"], name="alerts_aler_created_8af5ce_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["owner", "status"], name="alerts_aler_owner_i_cf5101_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["transaction"], name="alerts_aler_transac_22dc2a_idx"
            ),
        ),
    ]
